<%- include('../partials/mainheader') %>
<style>
  body {
    font-family: Arial, sans-serif;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
    background-color: #f4f4f9;
  }

  .container {
    display: flex;
    max-width: 900px;
    background-color: white;
    box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
    border-radius: 10px;
    overflow: hidden;
  }

  .form-section {
    padding: 40px;
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  .form-section h2 {
    margin-bottom: 20px;
    color: #333;
  }

  .form-section input {
    width: 100%;
    padding: 10px;
    margin-bottom: 15px;
    border: 1px solid #ccc;
    border-radius: 5px;
    font-size: 16px;
  }

  .form-section button {
    padding: 10px;
    background-color: #007bff;
    border: none;
    border-radius: 5px;
    color: white;
    font-size: 16px;
    cursor: pointer;
  }

  .form-section button:hover {
    background-color: #0056b3;
  }

  .form-section .google-signup {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 10px;
    cursor: pointer;
  }

  .form-section .google-signup img {
    margin-right: 5px;
  }

  .form-section .login-link {
    margin-top: 10px;
    text-align: center;
  }

  .image-section {
    background-color: #f7f7f7;
    flex: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 40px;
    position: relative;
  }

  .image-section h1 {
    position: absolute;
    top: 10px;
    left: 20px;
    font-size: 24px;
    color: #333;
  }

  .image-section img {
    max-width: 100%;
    border-radius: 10px;
  }

  .image-section p {
    position: absolute;
    bottom: 10px;
    left: 20px;
    font-size: 18px;
    color: #777;
  }

  .error-message {
    color: red;
    font-size: 0.85rem;
    display: none;
  }


  .error-message {
    color: red;
    font-size: 14px;
    display: block;
  }
</style>
<body>
  <div class="container">
    <div class="form-section">
      <h1>Wrist Style</h1>
      <h2>Sign Up</h2>
      <form method="post" id="signform">
        <div id="nameError" class="error-message"></div>
        <input id="name" type="text" name="name" placeholder="Full Name">
        <div id="emailError" class="error-message"></div>
        <input id="email" type="email" name="email" placeholder="Email address">
        <div id="phoneError" class="error-message"></div>
        <input id="phone" type="tel" name="phone" placeholder="Phone Number">
        <div id="passwordError" class="error-message"></div>
        <input id="password" type="password" name="password" placeholder="Password">
        <div id="confirmPasswordError" class="error-message"></div>
        <input id="confirm_password" type="password" name="confirm_password" placeholder="Confirm Password">
        <button id="submit" type="submit">Sign Up</button>
        <div id="messageDiv" style="display: none;"></div>
      </form>

      <p>or sign up with Google</p>
      <form action="/auth/google" method="get">
        <img src="https://img.icons8.com/color/48/000000/google-logo.png" alt="Google Icon" width="24px">
        <button type="submit">sigup google</button>
      </form>




      <div class="login-link">
        <p>Already registered? <a href="/login">Log in</a>
        </p>
      </div>
    </div>
    <div class="image-section">

      <!-- Replace with your image -->
      <img src="../images/signup.jpg" alt="Happy Shopping">

    </div>
  </div>

  <%-include("../partials/mainfooter")%>

      
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <script>


document.addEventListener("DOMContentLoaded", function () {
  const form = document.getElementById("signform");
  const messageDiv = document.getElementById("messageDiv");

  // Get all input elements
  const inputs = {
    name: document.getElementById("name"),
    email: document.getElementById("email"),
    phone: document.getElementById("phone"),
    password: document.getElementById("password"),
    confirm_password: document.getElementById("confirm_password")
  };

  // Create error elements if they don't exist
  Object.keys(inputs).forEach(inputName => {
    let errorElement = document.getElementById(`${inputName}Error`);
    if (!errorElement) {
      errorElement = document.createElement('div');
      errorElement.id = `${inputName}Error`;
      errorElement.className = 'error-message';
      errorElement.style.display = 'none';
      errorElement.style.color = 'red';
      inputs[inputName].insertAdjacentElement('afterend', errorElement);
    }
  });

  // Validation patterns
  const patterns = {
    name: /^[A-Za-z]+(?:\s[A-Za-z]+)*$/,
    email: /^[^\s@]+@[^\s@]+\.[^\s@]+$/,
    phone: /^(?!([0-9])\1{9})\d{10}$/,
    password: /^(?=.*[A-Za-z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/
  };

  // Error messages
  const errorMessages = {
    name: {
      empty: "Name is required",
      invalid: "Name should only contain letters and single spaces between words"
    },
    email: {
      empty: "Email is required",
      invalid: "Please enter a valid email address"
    },
    phone: {
      empty: "Phone number is required",
      invalid: "Please enter a valid 10-digit phone number"
    },
    password: {
      empty: "Password is required",
      invalid: "Password must contain minimum 8 characters, including letters, numbers, and special characters"
    },
    confirm_password: {
      empty: "Please confirm your password",
      mismatch: "Passwords do not match"
    }
  };

  // Add input event listeners for dynamic validation
  Object.keys(inputs).forEach(inputName => {
    const input = inputs[inputName];
    if (!input) {
      console.warn(`Input element '${inputName}' not found`);
      return;
    }

    input.addEventListener('input', function() {
      validateField(inputName);
    });

    input.addEventListener('blur', function() {
      validateField(inputName, true);
    });
  });

  // Validate individual field
  function validateField(fieldName, isFinal = false) {
    const input = inputs[fieldName];
    const errorElement = document.getElementById(`${fieldName}Error`);
    
    if (!input || !errorElement) {
      console.warn(`Required elements for '${fieldName}' validation not found`);
      return false;
    }

    const value = input.value.trim();
    
    // Reset error message
    errorElement.style.display = "none";
    errorElement.textContent = "";

    // Skip validation while typing unless it's password confirmation or final validation
    if (!isFinal && !value && fieldName !== 'confirm_password') {
      return true;
    }

    // Empty field validation
    if (!value) {
      errorElement.textContent = errorMessages[fieldName].empty;
      errorElement.style.display = "block";
      return false;
    }

    // Pattern validation for fields with patterns
    if (patterns[fieldName] && !patterns[fieldName].test(value)) {
      errorElement.textContent = errorMessages[fieldName].invalid;
      errorElement.style.display = "block";
      return false;
    }

    // Special validation for password confirmation
    if (fieldName === 'confirm_password' && value !== inputs.password.value) {
      errorElement.textContent = errorMessages.confirm_password.mismatch;
      errorElement.style.display = "block";
      return false;
    }

    return true;
  }

  // Form submission
  if (form) {
    form.addEventListener("submit", function (e) {
      e.preventDefault();
      if (messageDiv) {
        messageDiv.style.display = "none";
      }

      // Validate all fields
      let isValid = true;
      Object.keys(inputs).forEach(fieldName => {
        if (!validateField(fieldName, true)) {
          isValid = false;
        }
      });

      if (!isValid) return;

      // Prepare form data
      const formData = {
        name: inputs.name.value.trim(),
        email: inputs.email.value.trim(),
        phone: inputs.phone.value.trim(),
        password: inputs.password.value
      };

      // Submit form
      fetch("/signup", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(formData),
      })
      .then(response => response.json())
      .then((data) => {
        if (data.success) {
          window.location.href = data.redirectUrl;
        } else {
          if (messageDiv) {
            messageDiv.style.display = "block";
            messageDiv.classList.add("error");
            messageDiv.textContent = data.message || "An error occurred during signup";
          }
        }
      })
      .catch((error) => {
        if (messageDiv) {
          messageDiv.style.display = 'block';
          messageDiv.classList.add('error');
          messageDiv.textContent = 'An error occurred. Please try again later.';
        }
        console.error("Signup error:", error);
      });
    });
  } else {
    console.error("Form element not found");
  }
});

  </script>