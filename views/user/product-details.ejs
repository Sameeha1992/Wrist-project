<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= product.productName %> - Wrist Style</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
</head>
    <style>
        :root {
            --primary-color: #3498db;
            --secondary-color: #2c3e50;
            --accent-color: #e74c3c;
            --background-color: #ecf0f1;
            --text-color: #34495e;
        }
        body { 
            background-color: var(--background-color);
            color: var(--text-color);
            font-family: 'Roboto', sans-serif;
        }
        .navbar { 
            background-color: var(--primary-color);
            box-shadow: 0 2px 4px rgba(0,0,0,.1);
        }
        .navbar-brand, .nav-link { 
            color: #fff !important; 
            font-weight: 500;
        }
        .product-title { 
            color: var(--secondary-color);
            font-weight: bold; 
            font-size: 2.5rem;
        }
        .product-price { 
            color: var(--accent-color);
            font-size: 2rem; 
            font-weight: bold;
        }
        .btn-primary { 
            background-color: var(--primary-color);
            border-color: var(--primary-color);
            padding: 10px 20px;
        }
        .btn-primary:hover { 
            background-color: #2980b9;
            border-color: #2980b9;
        }
        .btn-outline-primary { 
            color: var(--primary-color);
            border-color: var(--primary-color);
            padding: 10px 20px;
        }
        .btn-outline-primary:hover { 
            background-color: var(--primary-color);
            color: #fff;
        }
        .image-zoom-container { 
            overflow: hidden; 
            position: relative; 
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0,0,0,.1);
        }
        .image-zoom { 
            transition: transform 0.3s ease; 
            width: 100%;
            height: auto;
        }
        .thumbnail { 
            cursor: pointer; 
            transition: opacity 0.3s ease; 
            border-radius: 4px;
        }
        .thumbnail:hover { 
            opacity: 0.7; 
        }
        .thumbnail.active { 
            border: 2px solid var(--primary-color);
        }
        #quantityInput { 
            width: 60px; 
            text-align: center; 
            border: 1px solid #ced4da;
            border-radius: 4px;
        }
        .related-products {
            background-color: #fff;
            padding: 40px 0;
            margin-top: 40px;
        }
        .related-products h2 {
            color: var(--secondary-color);
            margin-bottom: 30px;
        }
        .card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            border: none;
            border-radius: 8px;
            overflow: hidden;
        }
        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 15px rgba(0,0,0,.1);
        }
        .card-title {
            color: var(--secondary-color);
            font-weight: 500;
        }
        .card-text {
            color: var(--accent-color);
            font-weight: bold;
        }
        body {
            background-color: var(--background-color);
            color: var(--text-color);
            font-family: 'Roboto', sans-serif;
        }
        .navbar {
            background-color: var(--primary-color);
            box-shadow: 0 2px 4px rgba(0, 0, 0, .1);
        }
        .navbar-brand, .nav-link {
            color: #fff !important;
            font-weight: 500;
        }
        .product-title {
            color: var(--secondary-color);
            font-weight: bold;
            font-size: 2.5rem;
        }
        .product-price {
            color: var(--accent-color);
            font-size: 2rem;
            font-weight: bold;
        }
        .btn-primary {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
        }
        .btn-primary:hover {
            background-color: #2980b9;
        }
        .color-stock {
    display: flex;
    align-items: center;
    gap: 15px;
    margin-top: 20px;
}

.color-buttons {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    align-items: center;
}

.color-button-wrapper {
    position: relative;
    display: inline-flex;
    flex-direction: column;
    align-items: center;
    margin: 5px;
}

.color-button {
    width: 24px;
    height: 24px;
    border: 2px solid #ccc;
    border-radius: 50%;
    cursor: pointer;
    padding: 0;
    transition: all 0.2s ease;
    position: relative;
}

.color-button:hover:not(.disabled) {
    transform: scale(1.1);
    border-color: #555;
}

.color-button.active {
    border-color: #000;
    box-shadow: 0 0 0 2px rgba(0,0,0,0.1);
}

.color-button.disabled {
    opacity: 0.6;
    cursor: not-allowed;
    position: relative;
}

.color-button.disabled::after {
    content: '';
    position: absolute;
    top: 50%;
    left: -2px;
    right: -2px;
    height: 2px;
    background-color: #e74c3c;
    transform: rotate(-45deg);
}

.out-of-stock-label {
    position: absolute;
    top: 100%;
    left: 50%;
    transform: translateX(-50%);
    white-space: nowrap;
    color: #e74c3c;
    font-size: 0.65rem;
    font-weight: 500;
    margin-top: 4px;
}

.color-button-wrapper.active .color-button {
    border-color: #000;
    transform: scale(1.1);
}

.low-stock-label {
    color: rgb(12, 86, 4);
    font-size: 0.7rem; 
    font-style: italic; /* Makes it distinct from regular text */
    margin-left: 3px; /* Adds spacing from the color button */
}
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark">
        <div class="container">
            <a class="navbar-brand" href="/">Wrist Style</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item"><a class="nav-link" href="/">Home</a></li>
                    <li class="nav-item">
                        <a class="nav-link" href="/cart">
                            <i class="fas fa-shopping-cart"></i>
                            <span class="sr-only">Cart</span>
                            <% if (typeof cartItemCount !== 'undefined' && cartItemCount > 0) { %>
                                <span class="badge bg-danger rounded-pill"><%= cartItemCount %></span>
                            <% } %>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/getWishlist">
                            <i class="fas fa-heart"></i>
                            <span class="sr-only">Wishlist</span>
                            <% if (typeof wishlistItemCount !== 'undefined' && wishlistItemCount > 0) { %>
                                <span class="badge bg-warning rounded-pill"><%= wishlistItemCount %></span>
                            <% } %>
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container mt-4">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/">Home</a></li>
                <li class="breadcrumb-item active" aria-current="page"><%= product.productName %></li>
            </ol>
        </nav>
    </div>

    <div class="container mt-5">
        <div class="row">
            <div class="col-md-6">
                <div class="image-zoom-container mb-3">
                    <img src="/uploads/re-image/<%= product.productImage[0] %>" alt="<%= product.productName %>" class="img-fluid image-zoom" id="mainImage">
                </div>
                <div class="row">
                    <% product.productImage.forEach((image, index) => { %>
                        <div class="col-3 mb-3">
                            <img src="/uploads/re-image/<%= image %>" alt="Watch Thumbnail <%= index + 1 %>" 
                                 class="img-fluid thumbnail <%= index === 0 ? 'active' : '' %>" 
                                 onclick="changeImage('/uploads/re-image/<%= image %>', this)">
                        </div>
                    <% }) %>
                </div>
            </div>
            <div class="col-md-6">
                <h1 class="product-title mb-3"><%= product.productName %></h1>
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <span class="product-price">â‚¹<%= product.salePrice.toFixed(2) %></span>
                    <div class="product-rating">
                        <!-- Render the star ratings dynamically -->
                    </div>
                </div>
                <p class="mb-4"><%= product.description %></p>


                <% if (product.colorStock && product.colorStock.length > 0) { %>
                    <div class="color-stock">
                        <span>Available Colors:</span>
                        <div class="color-buttons">
                            <% product.colorStock.forEach(color => { %>
                                <% 
                                    // Mapping colors from the database to hex codes
                                    let colorHex;
                                    switch(color.color) {
                                        case 'red': colorHex = '#e74c3c'; break;
                                        case 'blue': colorHex = '#3498db'; break;
                                        case 'white': colorHex = '#ffffff'; break;
                                        case 'black': colorHex = '#2c3e50'; break;
                                        case 'silver': colorHex = '#bdc3c7'; break;
                                        case 'golden': colorHex = '#f39c12'; break;
                                        case 'pink': colorHex = '#e91e63'; break;
                                        default: colorHex = '#000000'; break;
                                    }
                                %>
                               <div class="color-button-wrapper <%= color.quantity <= 0 ? 'out-of-stock' : '' %>">
                                <button 
                                    class="color-button <%= color.quantity <= 0 ? 'disabled' : '' %>" 
                                    style="background-color: <%= colorHex %>" 
                                    title="<%= color.color %>"
                                    data-color="<%= color.color %>"
                                    data-id="<%= color._id %>"
                                    data-stock="<%= color.quantity %>"
                                    <%= color.quantity <= 0 ? 'disabled' : '' %>>
                                </button>
                                <% if (color.quantity <= 0) { %>
                                    <span class="out-of-stock-label">Out of Stock</span>
                                <% } else if(color.quantity <5) {%>
                                    <span class="low-stock-label"><%= color.quantity %> quantity left</span>
                                    <% } %>
                            </div>
                                  
                            <% }) %>
                        </div>
                    </div>
                <% } %>
                

                <div class="mb-3">
                    <% if (product.quantity == 0) { %>
                        <p>Out of stock</p>
                    <% } %>
                </div>

              
                    <div class="mb-4" hidden>
                        <label for="quantityInput" class="form-label"><%-product.quantity%></label>
                        <div class="input-group" style="width: 150px;">
                            <button class="btn btn-outline-secondary" type="button" id="decrementBtn">-</button>
                            <input type="number" class="form-control" id="quantityInput" value="1" min="1">
                            <button class="btn btn-outline-secondary" type="button" id="incrementBtn">+</button>
                        </div>
                    </div>
                   <div <%-product.colorStock.color%><%-product.category%>></div>

                    <div class="d-grid gap-3">
                        <button class="btn btn-primary btn-lg" id="addToCartBtn">Add to Cart</button>
                        <button class="btn btn-outline-primary btn-lg" id="addToWishlistBtn">
                            <i class="far fa-heart me-2"></i>Add to Wishlist
                        </button>
                    </div>
               
                    <div class="mt-4">
                        <p class="text-danger"></p>
                    </div>
                
            </div>
        </div>

    <div class="related-products">
        <div class="container">
            <h2 class="text-center mb-4">Related Products</h2>
            <div class="row">
                <% relatedProducts.forEach(product => { %>
                    <div class="col-md-3 mb-4">
                        <div class="card h-100">
                            <img src="/uploads/re-image/<%= product.productImage[0] %>" class="card-img-top" alt="<%= product.productName %>">
                            <div class="card-body d-flex flex-column">
                                <h5 class="card-title"><%= product.productName %></h5>
                                <p class="card-text mt-auto">â‚¹<%= product.salePrice.toFixed(2) %></p>
                                <a href="/productDetails?id=<%= product._id %>" class="btn btn-primary mt-2">View Product</a>
                            </div>
                        </div>
                    </div>
                <% }) %>
            </div>
        </div>
    </div>

    <body>
        
    
        
</html>
     
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>


    <script>
        const mainImage = document.getElementById('mainImage');
        const zoomContainer = document.querySelector('.image-zoom-container');

        zoomContainer.addEventListener('mousemove', (e) => {
            const { left, top, width, height } = zoomContainer.getBoundingClientRect();
            const x = (e.clientX - left) / width;
            const y = (e.clientY - top) / height;

            mainImage.style.transformOrigin = `${x * 100}% ${y * 100}%`;
            mainImage.style.transform = 'scale(1.5)';
        });

        zoomContainer.addEventListener('mouseleave', () => {
            mainImage.style.transformOrigin = 'center center';
            mainImage.style.transform = 'scale(1)';
        });

        function changeImage(imagePath, thumbnail) {
            document.getElementById('mainImage').src = imagePath;
            document.querySelectorAll('.thumbnail').forEach(thumb => thumb.classList.remove('active'));
            thumbnail.classList.add('active');
        }

        





document.addEventListener('DOMContentLoaded', () => {
    const colorButtons = document.querySelectorAll('.color-button');
    const addToCartBtn = document.getElementById('addToCartBtn');
    const quantityInput = document.getElementById('quantityInput');
    
    let selectedColor = null;

    // Color button selection logic
    colorButtons.forEach(button => {
        button.addEventListener('click', () => {
            

            if (button.disabled) {
                Toastify({
                    text: "This color is currently out of stock.Please select another color",
                    duration: 3000,
                    gravity: "top",
                    position: "right",
                    style: { 
                        backgroundColor:  "#e74c3c"
                    }
                }).showToast();
                return;
            }


            colorButtons.forEach(btn => {
                btn.classList.remove('active');
                btn.closest('.color-button-wrapper').classList.remove('active');
            });
            
            // Add active state to selected button
            button.classList.add('active');
            button.closest('.color-button-wrapper').classList.add('active');
            
           
            
            
            // Store selected color
            selectedColor = {
                color: button.dataset.color,
                id: button.dataset.id,
                stock: parseInt(button.dataset.stock)
            };

            // Update quantity input max based on selected color stock
            quantityInput.max = Math.min(selectedColor.stock, 5);
            quantityInput.value = 1;
            addToCartBtn.disabled = false;
        });
    });

    // Quantity input validation
   

    // Add to Cart Button Handler
    addToCartBtn.addEventListener('click', () => {
        if (!selectedColor) {
            Toastify({
                text: "Please select an available color first!",
                duration: 3000,
                gravity: "top",
                position: "right",
               style:{ backgroundColor: "#f39c12"
            }
            }).showToast();
            return;
        }

        const productId = "<%= product._id %>";
        const quantity = parseInt(quantityInput.value || 1);
        const colorStockId = selectedColor.id;

        console.log(colorStockId,"clorstockid")

        // AJAX request to add to cart
        $.ajax({
         url: '/addcart',
         method: 'POST',
         data: JSON.stringify({
        productId: productId,
        quantity: quantity,
        colorStockId: selectedColor.id
    }),
        contentType: 'application/json',
         success: function(response) {
        if (response.success) {
            Toastify({
                text: response.message,
                duration: 2000,
                gravity: "top",
                position: "right",
                style: { 
                    backgroundColor: "#2ecc71"
                }
            }).showToast();

            // Update cart badge
            const cartBadge = document.querySelector('.navbar .badge.bg-danger');
            if (cartBadge) {
                cartBadge.textContent = response.cartItemCount;
            }

            // Update stock and disable if necessary
            const selectedButton = document.querySelector(`.color-button[data-id="${colorStockId}"]`);
            if (selectedButton) {
                const newStock = response.remainingStock;
                selectedButton.dataset.stock = newStock;
                
                if (newStock <= 0) {
                    selectedButton.disabled = true;
                    selectedButton.innerHTML = '<span class="out-of-stock">Out</span>';
                }
            }
        } else {
            Toastify({
                text: response.message || "Failed to add to cart",
                duration: 2000,
                gravity: "top",
                position: "right",
                style: { 
                    backgroundColor: "#e74c3c"
                }
            }).showToast();
        }
    },
    error: function(xhr, status, error) {
        console.error("Full error details:", xhr.responseText);
        Toastify({
            text: xhr.responseJSON?.message || "An unexpected error occurred",
            duration: 3000,
            gravity: "top",
            position: "right",
            style: { 
                backgroundColor: "#e74c3c"
            }
        }).showToast();
    }
});
    });
});




document.addEventListener('DOMContentLoaded', () => {
    const colorButtons = document.querySelectorAll('.color-button');
    const addToWishlistBtn = document.getElementById('addToWishlistBtn');
    
     selectedColor = null;

    // Color button selection logic
    colorButtons.forEach(button => {
        button.addEventListener('click', () => {
            if (button.disabled) {
                Toastify({
                    text: "This color is currently out of stock. Please select another color.",
                    duration: 3000,
                    gravity: "top",
                    position: "right",
                    style: { 
                        backgroundColor: "#e74c3c"
                    }
                }).showToast();
                return;
            }

            // Remove active class from all buttons
            colorButtons.forEach(btn => {
                btn.classList.remove('active');
                btn.closest('.color-button-wrapper').classList.remove('active');
            });
            
            // Add active state to selected button
            button.classList.add('active');
            button.closest('.color-button-wrapper').classList.add('active');
            
            // Store selected color
            selectedColor = {
                color: button.dataset.color,
                id: button.dataset.id,
                stock: parseInt(button.dataset.stock)
            };

            console.log("selected color",selectedColor)
        });
    });




    // Add to Wishlist Button Handler
    addToWishlistBtn.addEventListener('click', () => {
        if (!selectedColor) {
            Toastify({
                text: "Please select an available color first!",
                duration: 3000,
                gravity: "top",
                position: "right",
                style: { 
                    backgroundColor: "#f39c12"
                }
            }).showToast();
            return;
        }

        const productId = "<%= product._id %>";
        const color = selectedColor.color

        // Check if the selected color is in stock
        if (selectedColor.stock <= 0) {
            Toastify({
                text: "Selected color is out of stock!",
                duration: 3000,
                gravity: "top",
                position: "right",
                style: { 
                    backgroundColor: "#f39c12"
                }
            }).showToast();
            return;
        }

       
        $.ajax({
            url: '/addToWishlist',
            method: 'POST',
            data: JSON.stringify({
                productId: productId,
               color:color
            }),
            contentType: 'application/json',
            success: function(response) {
                if (response.success) {
                    Toastify({
                        text: response.message,
                        duration: 3000,
                        gravity: "top",
                        position: "right",
                        style: { 
                            backgroundColor: "#2ecc71"
                        }
                    }).showToast();

                    const wishlistBadge = document.querySelector('.navbar .badge.bg-warning');
                    if (wishlistBadge) {
                        wishlistBadge.textContent = response.wishlistItemCount;
                    }
                } else {
                    Toastify({
                        text: response.message || 'Failed to add to wishlist',
                        duration: 3000,
                        gravity: "top",
                        position: "right",
                        style: {
                            backgroundColor: "#e74c3c"
                        }
                    }).showToast();
                }
            },
            error: function(xhr, status, error) {
                console.error("Full error details:", xhr.responseText);
                Toastify({
                    text: xhr.responseJSON?.message || "An unexpected error occurred",
                    duration: 3000,
                    gravity: "top",
                    position: "right",
                    style: {
                        backgroundColor: '#e74c3c'
                    }
                }).showToast();
            }
        });
    });
});


</script>