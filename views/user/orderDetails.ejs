<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Details</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <%include("../partials/user/profileHead")%>
    <style>
        .badge-processing {
            background-color: #ffeeba;
            color: #856404;
            padding: 0.5em 1em;
        }
        .back-button {
            background-color: #6c757d;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 4px;
            text-decoration: none;
        }
        .back-button:hover {
            background-color: #5a6268;
            color: white;
        }
        .order-details-card {
            background-color: #f8f9fa;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
        }
        .product-image {
            max-width: 100px;
            height: auto;
        }
        .detail-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
        }
        .total-row {
            font-weight: bold;
            border-top: 2px solid #dee2e6;
            padding-top: 10px;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <div class="container py-4">
        <!-- Back Button -->
        <div class="mb-4">
            <a href="/orders" class="back-button">← Back to Orders</a>
        </div>

        <!-- Order ID and Status -->
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1 class="h3">Order ID #<%= order._id %></h1>
            
        </div>

        <!-- Order Details -->
        <div class="order-details-card mb-4">
            <h2 class="h4 mb-3">Order Details</h2>
            <div class="row">
                <div class="col-md-4">
                    <p class="mb-1"><strong>Order Date:</strong></p>
                    <p><%= new Date(order.createdAt).toLocaleDateString() %></p>
                </div>
                <div class="col-md-4">
                    <p class="mb-1"><strong>Shipping Address:</strong></p>
                    <p><%= order.shippingAddress %></p>
                </div>
                <div class="col-md-4">
                    <p class="mb-1"><strong>Payment Method:</strong></p>
                    <p><%= order.paymentMethod %></p>
                </div>
            </div>
        </div>

        <!-- Order Items -->
        <div class="card mb-4">
            <div class="card-header">
                <h2 class="h4 mb-0">Order Items</h2>
            </div>
            <div class="card-body">
                <% order.items.forEach(item => { %>
                    <div class="row align-items-center mb-3">
                        <div class="col-2 col-md-1">
                            <img src="/uploads/re-image/<%= item.Image[0] %>" alt="<%= item.name %>" class="product-image">
                        </div>
                        <div class="col-10 col-md-7">
                            <h5 class="mb-1"><%= item.name %></h5>
                            <p class="text-muted mb-0">Color: <%= item.color %></p>
                            <p class="mb-0">
                                <span class="badge 
                                    <%= 
                                        item.itemStatus === 'Processing' ? 'badge-warning' : 
                                        item.itemStatus === 'Shipped' ? 'badge-info' : 
                                        item.itemStatus === 'Delivered' ? 'badge-success' : 
                                        'badge-danger'
                                    %>">
                                    <%= item.itemStatus %>
                                </span>
                            </p>
                            <p class="mb-0">
                                Current Status: 
                                <span id="current-status-<%= item._id %>" 
                                    class="badge bg-<%= 
                                        item.itemStatus === 'Processing' ? 'primary' :
                                        item.itemStatus === 'Shipped' ? 'info' :
                                        item.itemStatus === 'Delivered' ? 'success' :
                                        item.itemStatus === 'Cancelled' ? 'danger' : 'secondary'
                                    %>">
                                  <%= item.itemStatus %>
                              </span>
                            </p>
                        </div>
                        <div class="col-6 col-md-2 text-md-end">
                            <p class="mb-0">Qty: <%= item.quantity %></p>
                        </div>
                        <div class="col-6 col-md-2 text-end">
                            <p class="mb-0">₹<%= item.price.toFixed(2) %></p>
                        </div>

                        <% if(['Processing'].includes(item.itemStatus)) { %>
                            <div class="col-12 mt-2">
                                <button class="btn btn-sm btn-danger" onclick="cancelIndividualItem('<%= order._id %>', '<%= item._id %>')">
                                    Cancel Item
                                </button>
                            </div>
                             <!--Retry payment displaying-->

                            <% } else if(['Failed'].includes(item.itemStatus)){ %>

                                <div class="col-12 mt-2">
                                   
                                    <button class="btn btn-sm btn-danger" onclick="cancelIndividualItem('<%= order._id %>')">
                                        Cancel Payment
                                    </button>
                                </div>
                            <% } else if(['Delivered'].includes(item.itemStatus)){ %>
                                <div class="col-12 mt-2">
                                    <button class="btn btn-sm btn-warning" onclick="returnDeliveredItem('<%= order._id %>', '<%= item._id %>')">
                                        Return Item
                                    </button>

                                    <button id="downloadInvoice" class="btn btn-info" onclick="downloadInvoice('<%= order._id %>','<%= item._id %>')">Download invoice</button>
                                </div>
                            <% } %>
                           

                    </div>
                <% }); %>
            </div>
        </div>

        <!-- Order Summary -->
        <div class="card">
            <div class="card-header">
                <h2 class="h4 mb-0">Order Summary</h2>
            </div>
            <div class="card-body">
                <div class="detail-row">
                    <span>Subtotal:</span>
                    <span>₹<%= order.subtotal.toFixed(2) %></span>
                </div>
                
               
                <div class="detail-row total-row">
                    <span>Total:</span>
                    <span>₹<%= order.total.toFixed(2) %></span>
                </div>
            </div>
        </div>
    </div>

    
    
    
</div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>

        function cancelIndividualItem(orderId,itemId) {
            Swal.fire({
                title: 'Are you sure?',
                text: 'Do you want to cancel this order?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, cancel it!'

            }).then((result) => {
                if (result.isConfirmed) {
                    // Send AJAX request to cancel the order
                    fetch(`/cancel-order/${orderId}/${itemId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.message === 'Order cancelled successfully') {
                       Swal.fire({
                       title: 'Cancelled!',
                       text: 'Your order has been cancelled.',
                       icon: 'success'
                        }).then(() => {
                       window.location.reload();
                     });
                        } else {
                            Swal.fire({
                                title: 'Error!',
                                text: data.message || 'Failed to cancel the order',
                                icon: 'error'
                            });
                        }
                    })
                    .catch(error => {
                        Swal.fire({
                            title: 'Error!',
                            text: 'An error occurred while cancelling the order',
                            icon: 'error'
                        });
                    });
                }
            });
        }
    




        function returnDeliveredItem(orderId, itemId) {
    Swal.fire({
        title: 'Return Item',
        html: `
            <div class="form-group">
                <label for="return-reason" class="mb-2">Please provide a reason for return:</label>
                <select id="return-reason" class="form-control">
                    <option value="">Select a reason</option>
                    <option value="damaged">Product Damaged/Defective</option>
                    <option value="wrong_item">Wrong Item Received</option>
                    <option value="not_as_described">Product Not As Described</option>
                    <option value="size_issue">Size/Fit Issue</option>
                    <option value="quality_issue">Quality Not Satisfactory</option>
                    <option value="other">Other</option>
                </select>
                <textarea id="additional-comments" 
                    class="form-control mt-3" 
                    placeholder="Additional comments (optional)"
                    rows="3"
                ></textarea>
            </div>
        `,
        showCancelButton: true,
        confirmButtonText: 'Submit Return Request',
        cancelButtonText: 'Cancel',
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        preConfirm: () => {
            const reason = document.getElementById('return-reason').value;
            const comments = document.getElementById('additional-comments').value;          
            
            if (!reason) {
                Swal.showValidationMessage('Please select a reason for return');
                return false;
            }
            
            return { reason, comments };
        }
    }).then((result) => {
        if (result.isConfirmed) {
            // Make API call to process the return
            fetch('/returnOrder', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    orderId: orderId,
                    itemId: itemId,
                    reason: result.value.reason,
                    comments: result.value.comments
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire(
                        'Return Requested!',
                        'Your return request has been submitted successfully.',
                        'success'
                    ).then(() => {
                        
                        
                        window.location.reload();
                    });
                } else {
                    Swal.fire(
                        'Error!',
                        data.message || 'Failed to process return request.',
                        'error'
                    );
                }
            })
            .catch(error => {
                Swal.fire(
                    'Error!',
                    'There was a problem submitting your return request.',
                    'error'
                );
                console.error('Error:', error);
            });
        }
    });
}




function downloadInvoice(orderId, itemId){

    window.location.href = `/invoiceDownload/${orderId}/${itemId}`;
}




    </script>
<%include("../partials/mainfooter")%>