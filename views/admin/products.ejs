<%- include("../../views/partials/admin/header") %>
<main class="main-content">
    <div class="card">
        <div class="card-header">
            <h2 class="card-title">Products</h2>
            <div class="search-add">
                <div class="search-container">
                    <input type="text" class="search-input" placeholder="Search products or brands">
                    <svg class="search-icon" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <circle cx="11" cy="11" r="8"></circle>
                        <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
                    </svg>
                </div>
                <a href="/admin/addProducts" class="btn btn-primary">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-2">
                        <line x1="12" y1="5" x2="12" y2="19"></line>
                        <line x1="5" y1="12" x2="19" y2="12"></line>
                    </svg>
                    Add Product
                </a>
            </div>
        </div>
        <div class="card-content">
            <table>
                <thead>
                    <tr>
                        <th style="width: 20%">Product Name</th>
                        <th style="width: 12%">Brand</th>
                        <th style="width: 12%">Category</th>
                        <th style="width: 15%">Available Colors</th>
                        <th style="width: 10%">Sale Price</th>
                        <th style="width: 10%">Offer Price</th>
                        <th style="width: 8%">Offer</th>
                        <th style="width: 6%">Status</th>
                        <th style="width: 7%">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% for(let i=0; i<data.length; i++) { %>
                    <tr>
                        <td><%=data[i].productName%></td>
                        <td>
                            <%= data[i].brand?.brandName || 'Not Assigned' %>
                        </td>
                        <td>
                            <%= data[i].category?.name || 'Not Assigned' %>
                        </td>
                        <td>
                            <% if (data[i].colorStock && data[i].colorStock.length > 0) { %>
                                <div class="color-list">
                                    <% const availableColors = data[i].colorStock.filter(stock => stock.status === 'Available' && stock.quantity > 0); %>
                                    <% if (availableColors.length > 0) { %>
                                        <% availableColors.forEach((stock, index) => { %>
                                            <span class="color-badge">
                                                <%= stock.color %> (<%= stock.quantity %>)
                                                <%= index < availableColors.length - 1 ? ',' : '' %>
                                            </span>
                                        <% }); %>
                                    <% } else { %>
                                        <span class="no-colors">No colors available</span>
                                    <% } %>
                                </div>
                            <% } else { %>
                                <span class="no-colors">No colors</span>
                            <% } %>
                        </td>
                        <td>â‚¹<%=data[i].salePrice%></td>



                        <td>
                            <%if(locals.data[i].productOffer) {%>
                            
                            <%=data[i].productOffer %>
                            <%} else { %>
                                0%

                                <% } %>
                        
                        </td>
                        <td>
                            <% if(locals.data[i].productOffer===0) { %>
                                <input type="number" id="offerInput-<%= data[i]._id %>" placeholder="Enter offer %" min="0" max="100" style="width: 80px;">
                                <button class="btn btn-offer" onclick="addOffer('<%=data[i]._id%>')">
                                    Add Offer
                                </button>
                            <% } else { %>
                                <button class="btn btn-remove-offer" onclick="removeOffer('<%=data[i]._id%>')">
                                    Remove
                                </button>
                            <% } %>
                        </td>
                        <td>
                            <span class="status-badge <%=data[i].isBlocked ? 'status-blocked' : 'status-active'%>">
                                <%=data[i].isBlocked ? 'Blocked' : 'Active'%>
                            </span>
                        </td>
                        <td>
                            <div class="action-buttons">
                                <a href="/admin/editProduct?id=<%=data[i]._id%>" class="btn btn-edit">Edit</a>
                                <% if(!data[i].isBlocked) { %>
                                    <a href="/admin/blockProduct?id=<%=data[i]._id%>" class="btn btn-block">Block</a>
                                <% } else { %>
                                    <a href="/admin/unblockProduct?id=<%=data[i]._id%>" class="btn btn-unblock">Unblock</a>
                                <% } %>
                            </div>
                        </td>
                    </tr>
                    <% } %>
                </tbody>
            </table>
        </div>
    </div>

    <div class="pagination-container">
        <div class="pagination">
            <% if (currentPage > 1) { %>
                <a href="?page=<%= currentPage - 1 %>">&laquo; Previous</a>
            <% } %>
            <% for (let i = 1; i <= totalPages; i++) { %>
                <% if (i === currentPage) { %>
                    <span class="current-page"><%= i %></span>
                <% } else { %>
                    <a href="?page=<%= i %>"><%= i %></a>
                <% } %>
            <% } %>
            <% if (currentPage < totalPages) { %>
                <a href="?page=<%= currentPage + 1 %>">Next &raquo;</a>
            <% } %>
        </div>
    </div>
</main>

<style>
.main-content {
    padding: 2rem;
}

.card {
    background: white;
    border-radius: 8px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
}

.card-header {
    padding: 1.5rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid #e5e7eb;
}

.search-add {
    display: flex;
    gap: 1rem;
    align-items: center;
}

.search-container {
    position: relative;
}

.search-input {
    padding: 0.5rem 1rem 0.5rem 2.5rem;
    border: 1px solid #e5e7eb;
    border-radius: 6px;
    width: 300px;
}

.search-icon {
    position: absolute;
    left: 0.75rem;
    top: 50%;
    transform: translateY(-50%);
    color: #9ca3af;
}

.btn {
    display: inline-flex;
    align-items: center;
    padding: 0.5rem 1rem;
    border-radius: 6px;
    font-weight: 500;
    text-decoration: none;
    cursor: pointer;
    border: none;
}

.btn-primary {
    background-color: #2563eb;
    color: white;
}

.btn-offer {
    background-color: #0ea5e9;
    color: white;
    padding: 0.375rem 0.75rem;
    font-size: 0.875rem;
}

.btn-remove-offer {
    background-color: #ef4444;
    color: white;
    padding: 0.375rem 0.75rem;
    font-size: 0.875rem;
}

.btn-edit {
    background-color: #0ea5e9;
    color: white;
}

.btn-block {
    background-color: #ef4444;
    color: white;
}

.btn-unblock {
    background-color: #22c55e;
    color: white;
}

.card-content {
    padding: 1.5rem;
}

table {
    width: 100%;
    border-collapse: separate;
    border-spacing: 0;
}

th {
    background-color: #f8fafc;
    color: #64748b;
    font-weight: 600;
    text-transform: uppercase;
    font-size: 0.75rem;
    letter-spacing: 0.05em;
    padding: 0.75rem 1rem;
    text-align: left;
    border-bottom: 1px solid #e5e7eb;
}

td {
    padding: 1rem;
    border-bottom: 1px solid #e5e7eb;
    vertical-align: middle;
}

.status-badge {
    display: inline-flex;
    align-items: center;
    padding: 0.25rem 0.75rem;
    border-radius: 9999px;
    font-size: 0.875rem;
    font-weight: 500;
}

.status-active {
    background-color: #dcfce7;
    color: #166534;
}

.status-blocked {
    background-color: #fee2e2;
    color: #991b1b;
}

.action-buttons {
    display: flex;
    gap: 0.5rem;
}

.action-buttons .btn {
    padding: 0.375rem 0.75rem;
    font-size: 0.875rem;
}

.pagination-container {
    margin-top: 2rem;
    display: flex;
    justify-content: center;
}

.pagination {
    display: flex;
    gap: 0.5rem;
}

.pagination a, .pagination .current-page {
    padding: 0.5rem 0.75rem;
    border: 1px solid #e5e7eb;
    border-radius: 6px;
    color: #4b5563;
    text-decoration: none;
}

.pagination .current-page {
    background-color: #2563eb;
    color: white;
    border-color: #2563eb;
}
</style>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
async function addOffer(productId) {

    const offerInput = document.getElementById(`offerInput-${productId}`);
    console.log(offerInput,"offer input")
    const offer = offerInput.value;
    console.log(offer,"the value of the offer")

    if(!offer || offer <0 || offer > 100){
        Swal.fire({
            title:'Error!',
            text: 'Please enater a valid offer percentage (0-100)',
            icon:'error',
            confirmButtonText: 'OK'
        });
        return;
    }

    try {
        const response = await fetch(`/admin/addProductOffer/${productId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ offer: Number(offer)})
        });
        console.log(response,"response of the offer")

        const data = await response.json();
        console.log(data,"data of the offer")

        if (response.ok) {
            Swal.fire({
                title: 'Success!',
                text: 'Offer added successfully',
                icon: 'success',
                confirmButtonText: 'OK'
            }).then(() => {
                // Reload the page to reflect changes
                window.location.reload();
            });
        } else {
            throw new Error(data.message || 'Failed to add offer');
        }
    } catch (error) {
        Swal.fire({
            title: 'Error!',
            text: error.message || 'Something went wrong',
            icon: 'error',
            confirmButtonText: 'OK'
        });
    }
}

async function removeOffer(productId) {
    try {
       
        const result = await Swal.fire({
            title: 'Are you sure?',
            text: 'Do you want to remove this offer?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, remove it!',
            cancelButtonText: 'Cancel'
        });

        if (result.isConfirmed) {
            const response = await fetch(`/admin/removeProductOffer/${productId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                
            });

            const data = await response.json();

            if (response.ok) {
                Swal.fire({
                    title: 'Success!',
                    text: 'Offer removed successfully',
                    icon: 'success',
                    confirmButtonText: 'OK'
                }).then(() => {
                    window.location.reload();
                });
            } else {
                throw new Error(data.message || 'Failed to remove offer');
            }
        }
    } catch (error) {
        Swal.fire({
            title: 'Error!',
            text: error.message || 'Something went wrong',
            icon: 'error',
            confirmButtonText: 'OK'
        });
    }
}
</script>