<%- include("../../views/partials/admin/header") %>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add New Product</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    <style>
        .content-main {
            padding: 2rem;
            background-color: #f8f9fa;
        }
        .content-title {
            font-size: 2rem;
            font-weight: 600;
            color: #333;
            margin-bottom: 1.5rem;
        }
        .card {
            border: none;
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
            margin-bottom: 2rem;
        }
        .card-header {
            background-color: #007bff;
            color: white;
            font-weight: 600;
        }
        .form-label {
            font-weight: 500;
        }
        .btn-primary {
            background-color: #007bff;
            border-color: #007bff;
        }
        .btn-primary:hover {
            background-color: #0056b3;
            border-color: #0056b3;
        }
        .thumbnails-container {
            display: flex;
            overflow-x: auto;
            padding: 1rem;
            gap: 1rem;
        }
        .thumbnail {
            width: 100px;
            height: 100px;
            object-fit: cover;
            border-radius: 0.25rem;
        }
        .image-upload {
            margin-bottom: 1rem;
        }
        .image-preview {
            max-width: 100%;
            height: auto;
            margin-bottom: 1rem;
        }
        .error-message {
            color: #dc3545;
            font-size: 0.875rem;
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <section class="content-main">
            <h1 class="content-title">Add New Product</h1>
            <div class="row">
                <div class="col-lg-8">
                    <div class="card">
                        <div class="card-body">
                            <form method="post" action="/admin/addProducts" id="addProductForm" enctype="multipart/form-data"
                            onsubmit="return validateForm()">
                                <div class="mb-4">
                                    <label for="product_name" class="form-label">Product Name</label>
                                    <input type="text" class="form-control" id="product_name" name="productName" required>
                                    <div id="productName-error" class="error-message"></div>
                                </div>
                                <div class="row mb-4">
                                    <div class="col-md-6">
                                        <label for="brand" class="form-label">Brand</label>
                                        <select class="form-select" id="brand" name="brand" required>
                                            <%for (let i=0;i<brand.length;i++){%>
                                            <option value="<%=brand[i].brandName%>">
                                                <%=brand[i].brandName%>
                                            </option>
                                            <%}%>
                                        </select>
                                        <div id="brand-error" class="error-message"></div>
                                    </div>
                                    <div class="col-md-6">
                                        <label for="category" class="form-label">Category</label>
                                        <select class="form-select" id="category" name="category" required>
                                            <%for (let i=0;i<cat.length;i++){%>
                                            <option value="<%=cat[i].name%>">
                                                <%= cat[i].name%>
                                            </option>
                                        <%}%>
                                            <!-- Add category options here -->
                                        </select>
                                        <div id="category-error" class="error-message"></div>
                                    </div>
                                </div>
                                <div class="mb-4">
                                    <label for="description" class="form-label">Full Description</label>
                                    <textarea class="form-control" id="description" name="description" rows="4" required></textarea>
                                    <div id="description-error" class="error-message"></div>
                                </div>
                                <div class="row mb-4">
                                    <div class="col-md-4">
                                        <label for="regularPrice" class="form-label">Regular Price</label>
                                        <input type="number" class="form-control" id="regularPrice" name="regularPrice" required>
                                        <div id="regularPrice-error" class="error-message"></div>
                                    </div>
                                    <div class="col-md-4">
                                        <label for="salePrice" class="form-label">Sale Price</label>
                                        <input type="number" class="form-control" id="salePrice" name="salePrice">
                                        <div id="salePrice-error" class="error-message"></div>
                                    </div>
                                    <div class="col-md-4">
                                        <label for="quantity" class="form-label">Quantity</label>
                                        <input type="number" class="form-control" id="quantity" name="quantity" required>
                                        <div id="quantity-error" class="error-message"></div>
                                    </div>
                                </div>
                                <div class="mb-4">
                                    <label for="color" class="form-label">Color</label>
                                    <input type="text" class="form-control" id="color" name="color">
                                    <div id="color-error" class="error-message"></div>
                                </div>
                                <div class="card mb-4">
                                    <div class="card-header">
                                        Product Images
                                    </div>
                                    <div class="card-body">
                                        <div id="addedImagesContainer" class="thumbnails-container mb-3"></div>
                                        <div class="row">
                                            <!-- Image Upload Field 1 -->
                                            <div class="col-md-6 image-upload-container">
                                                <img src="" alt="" class="image-preview" id="imgView1">
                                                    
                                                <input class="form-control" type="file" name="images" id="input1"
                                                      accept="image/png, image/jpeg, image/jpg" 
                                                      onchange="viewImage1(event), viewImage(event, 1)">
                                                <span id="images-error" class="error-message"></span>
                                            </div>  
                                                
                                                <div class="image-cropper d-flex align-items-center" id="cropper1">
                                                    <img src="" id="croppedImg1" alt="">
                                                    <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                                                </div>
                                            </div>
                                            <!-- Image Upload Field 2 -->
                                            <div class="col-md-6 image-upload-container">
                                                <img src="" alt="" class="image-preview" id="imgView2">
                                                <input class="form-control" type="file" name="images" id="input2" accept="image/png, image/jpeg, image/jpg" onchange="viewImage2(event), viewImage(event, 2)">
                                                <div class="image-cropper d-flex align-items-center" id="cropper2">
                                                    <img src="" id="croppedImg2" alt="">
                                                    <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6 image-upload-container">
                                                <img src="" alt="" class="image-preview" id="imgView3">

                                                <input class="form-control" type="file" name="images" id="input3" accept="image/png, image/jpeg, image/jpg" onchange="viewImage3(event), viewImage(event, 3)">
                                                <div class="image-cropper d-flex align-items-center" id="cropper3">
                                                    <img src="" id="croppedImg3" alt="">
                                                    <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                                                </div>
                                            </div>
                                            <!-- Image Upload Field 4 -->
                                            <div class="col-md-6 image-upload-container">
                                                <img src="" alt="" class="image-preview" id="imgView4">

                                                <input class="form-control" type="file" name="images" id="input4" accept="image/png, image/jpeg, image/jpg" onchange="viewImage4(event), viewImage(event, 4)">
                                                <div class="image-cropper d-flex align-items-center" id="cropper4">
                                                    <img src="" id="croppedImg4" alt="">
                                                    <button type="button" id="saveButton4" class="btn-sm btn-primary">Save</button>
                                                </div>
                                            </div>
                                        </div>
                                        <button class="btn btn-md rounded font-sm hover-up" type="button" onclick="validateAndSubmit()">Publish</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
    <script>
        function validateAndSubmit(){
            if(validateForm()){
                document.forms[0].submit();

            }
        }
            


        function viewImage1(event){
            document.getElementById("imgView1").src  = URL.createObjectURL(event.target.files[0])
        }

        function viewImage2(event){
            document.getElementById("imgView2").src = URL.createObjectURL(event.target.files[0])
        }
             
        function viewImage3(event){
            document.getElementById("imgView3").src = URL.createObjectURL(event.target.files[0]);
        }

        function viewImage4(event){
            document.getElementById("imgView4").src = URL.createObjectURL(event.target.files[0])
        }
           


        

       function viewImage(event,index){
        let input = event.target;
        let reader = new FileReader();
        reader.onload = function (){
            let dataURL = reader.result;
            let image = document.getElementById("imgView"+index);
            image.src = dataURL;
            let cropper = new Cropper(image,{
                aspectRatio:1,
                viewMode:1,
                guides:true,
                background:false,
                autoCropArea:1,
                zoomable:true
            });

            let cropperContainer = document.querySelector("#croppedImg" + index).parentNode;
            cropperContainer.style.display = 'block';

            let saveButton = document.querySelector("#saveButton" +index);
            saveButton.addEventListener('click',async function(){

                let croppedCanvas = cropper.getCroppedCanvas();
                let croppedImage = document.getElementById("croppedImg" +index);
                croppedImage.src = croppedCanvas.toDataURL('image/jpeg',1.0);


                let timestamp = new Date().getTime();
                let fileName = `cropped-img-${timestamp}-${index}.png`;


                await croppedCanvas.toBlob(blob=>{
                    let input = document.getElementById('input'+index);
                    let imgFile = new File([blob],fileName,blob)
                    const fileList = new DataTransfer();
                    fileList.items.add(imgFile);
                    input.files = fileList.files
                });
                cropperContainer.style.display = 'none';
                cropper.destroy();
            });
        };

        reader.readAsDataURL(input.files[0]);

       }

       const selectedImages = [];
       document.getElementById('input1').addEventListener('change',handleFileSelect);

       function handleFileSelect(event){
           const addedImagesContainer = document.getElementById('addedImagesContainer');
           addedImagesContainer.innerHTML="";
           const files = event.target.files;

           for(let i=0;i<files.length;i++){
            const file = files[i];
            selectedImages.push(file);
            const thumbnail = document.createElement("div");
            thumbnail.classList.add('thumbnail');

            const img = document.createElement("img");
            img.src = URL.createObjectURL(file);
            img.alt ='thumbnail';
            img.style.width = "50px";
            img.style.height="auto";
            const removeIcon = document.createElement("span");
            removeIcon.classList.add('remove-icon');
            removeIcon.innerHTML = "&times;";
            removeIcon.addEventListener("click",function(){
                const index = selectedImages.indexOf(file);
                if(index!==-1){
                    selectedImages.splice(index,1)
                }
                thumbnail.remove();
            });
            thumbnail.appendChild(img);
            thumbnail.appendChild(removeIcon);
            addedImagesContainer.appendChild(thumbnail);


           }
       }



        function validateForm() {
              clearErrorMessages();
              const name = document.getElementsByName('productName')[0].value;
              const description = document.getElementById('description').value;
              const brand = document.getElementsByName('brand')[0].value;
              const price = document.getElementsByName('regularPrice')[0].value;
              const saleprice = document.getElementsByName('salePrice')[0].value;
              const color = document.getElementsByName('color')[0].value;
              const category = document.getElementsByName('category')[0].value;
              const images = document.getElementById('input1')
              const quantity=parseInt(document.getElementsByName('quantity')[0].value);

              let isValid = true
              if (name.trim() === "") {
      displayErrorMessage('productName-error', 'Please enter a product name.');
      isValid = false;

   } else if (!/^[a-zA-Z\s]+$/.test(name.trim())) {
      displayErrorMessage('productName-error', 'Product name should contain only alphabetic characters.');
      isValid = false;
   }
            
   if (description.trim() === "") {
      displayErrorMessage('description-error', 'Please enter a product description.');
      isValid = false;
      
   } else if (!/^[a-zA-Z\s]+$/.test(description.trim())) {
      displayErrorMessage('description-error', 'Product description should contain only alphabetic characters.');
      isValid = false;
   }
  
  
           
  
  
              if ( parseInt(quantity) < 0) {
                  displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
                  isValid = false;
              }
  
  
  
  
              if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
                  displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
                  isValid = false;
              }
  
  
  
  
              if (!/^\d+(\.\d{1,2})?$/.test(saleprice) || parseFloat(saleprice) < 0) {
                  displayErrorMessage('salePrice-error', 'Please enter a valid non-negative price.');
                  isValid = false;
              }
              if (parseFloat(price) <= parseFloat(saleprice)) {
      displayErrorMessage('regularPrice-error', 'Regular price must be greater than sale price.');
      isValid = false;
   }
  
  
              if (color.trim() === "") {
                  displayErrorMessage('color-error', 'Please enter a color.');
                  isValid = false;
              }
  
  
              if (images.files.length === 0) {
                  displayErrorMessage("images-error",'Please select an image.');
                  isValid = false;
              }
              return isValid;
          }


          function displayErrorMessage(elementId, message) {
              var errorElement = document.getElementById(elementId);
              errorElement.innerText = message;
              errorElement.style.display = "block";
          }
  
  
          function clearErrorMessages() {
              const errorElements = document.getElementsByClassName('error-message');
              Array.from(errorElements).forEach(element => {
                  element.innerText = '';
                  element.style.display = "none";
              });
              const errorMessage = document.getElementById('errorMessage');
  
  
          }













    </script>
</body>
</html>




<%- include("../../views/partials/admin/footer") %>