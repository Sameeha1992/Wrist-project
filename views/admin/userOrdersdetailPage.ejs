<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Details</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <%include("../partials/user/profileHead")%>
    <style>
        .badge-processing {
            background-color: #ffeeba;
            color: #856404;
            padding: 0.5em 1em;
        }
        .back-button {
            background-color: #6c757d;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 4px;
            text-decoration: none;
        }
        .back-button:hover {
            background-color: #5a6268;
            color: white;
        }
        .order-details-card {
            background-color: #f8f9fa;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
        }
        .product-image {
            max-width: 100px;
            height: auto;
        }
        .detail-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
        }
        .total-row {
            font-weight: bold;
            border-top: 2px solid #dee2e6;
            padding-top: 10px;
            margin-top: 10px;
        }
        .product-card {
            background-color: #f8f9fa;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 20px;
        }
        .product-card-header {
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="container py-4">
        <!-- Back Button -->
        <div class="mb-4">
            <a href="/userOrders" class="back-button">← Back to Orders</a>
        </div>

        <!-- Order ID and Status -->
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1 class="h3">ORDER ID #<%= order.orderId %></h1>
           
        </div>

        <!-- Order Details -->
        <div class="order-details-card mb-4">
            <h2 class="h4 mb-3">Order Details</h2>
            <div class="row">
                <div class="col-md-4">
                    <p class="mb-1"><strong>Order Date:</strong></p>
                    <p><%= new Date(order.createdAt).toLocaleDateString() %></p>
                </div>
                <div class="col-md-4">
                    <p class="mb-1"><strong>Shipping Address:</strong></p>
                    <p><%= order.shippingAddress %></p>
                </div>
                <div class="col-md-4">
                    <p class="mb-1"><strong>Payment Method:</strong></p>
                    <p><%= order.paymentMethod %></p>
                </div>
            </div>
        </div>

        <!-- Order Items -->
        <div class="card mb-4">
            <div class="card-header">
                <h2 class="h4 mb-0">Order Items</h2>
            </div>
            <div class="card-body">
                <% let totalOrderPrice = 0; %> <!-- Initialize total price variable -->
                <% order.items.forEach(item => { %>
                    <div class="product-card">
                        <div class="d-flex align-items-center">
                            <img src="/uploads/re-image/<%= item.Image[0] %>" alt="<%= item.name %>" class="product-image">
                            <div class="ms-3">
                                <h5><%= item.name %></h5>
                                <p class="text-muted">Color: <%= item.color %></p>
                                <p>Quantity: <%= item.quantity %></p>
                                <p class="mb-0">Price: ₹<%= item.totalPrice.toFixed(2) %></p>
                            </div>
                        </div>
                        <div class="mt-3">
                            <label for="status-<%= item.orderItemId %>"><strong>Status:</strong></label>
                            <select class="form-select form-select-sm" id="status-<%= item.orderItemId %>" data-item-id="<%= item.orderItemId %>">
                                <option value="Processing" <%= item.itemStatus === 'Processing' ? 'selected' : '' %>>Processing</option>
                                <option value="Shipped" <%= item.itemStatus === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                                <option value="Delivered" <%= item.itemStatus === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                                <option value="Cancelled" <%= item.itemStatus === 'Cancelled' ? 'selected' : '' %>>Cancelled</option>
                            </select>
                            <button class="btn btn-sm btn-primary mt-2 update-status"
                             data-item-id="<%= item.orderItemId %>"
                             data-product-id="<%= item.id %>"
                             data-color="<%= item.color%>"
                             data-quantity="<%= item.quantity %>"
                             data-order-id="<%= order._id %>"
                              data-original-status="<%= item.itemStatus %>">
                             >Update Status</button>
                             <div class="current-status mt-2">
                                Current Status:  <span id="current-status-<%= item.orderItemId %>" 
                                    class="badge bg-<%= 
                                        item.itemStatus === 'Processing' ? 'primary' :
                                        item.itemStatus === 'Shipped' ? 'info' :
                                        item.itemStatus === 'Delivered' ? 'success' :
                                        item.itemStatus === 'Cancelled' ? 'danger' : 'secondary'
                                    %>">
                                  <%= item.itemStatus %>
                              </span>
                            </div>
                        </div>
                    </div>
                    <% totalOrderPrice += item.totalPrice; %> <!-- Add the item price to the total -->
                <% }); %>
            </div>
        </div>

        <!-- Order Summary -->
        <div class="card">
            <div class="card-header">
                <h2 class="h4 mb-0">Order Summary</h2>
            </div>
            <div class="card-body">
                <div class="detail-row">
                    <span>Subtotal:</span>
                    <span>₹<%= order.subtotal.toFixed(2) %></span>
                </div>

                <div class="detail-row">
                    <span>Discount:</span>
                    <span>₹<%= order.couponDiscount.toFixed(2)||0 %></span>
                </div>

                <div class="total-row">
                    <span>Total Price:</span>
                    <span>₹<%= (order.subtotal.toFixed(2))-order.couponDiscount.toFixed(2) %></span> 
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
      
      
      document.addEventListener('DOMContentLoaded', () => {
    const updateButtons = document.querySelectorAll('.update-status'); 

    updateButtons.forEach(button => {
       
        const select = button.previousElementSibling; 
        

        button.addEventListener('click', async () => {
            const row = button.closest('.product-card'); 
            const newStatus = select.value; 
            const orderId = button.getAttribute('data-order-id'); 
            const productId = button.getAttribute('data-product-id');
            const itemId = button.getAttribute('data-item-id') 
            const color = button.getAttribute('data-color'); 

            console.log('Order ID:', orderId);
            console.log('Product ID:', productId);
            console.log('Color:', color);
            console.log('New Status:', newStatus);

            if (newStatus === 'Cancelled') {
                const confirmCancel = await Swal.fire({
                    title: 'Are you sure?',
                    text: 'This action cannot be undone.',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, Cancel it!',
                    cancelButtonText: 'No, Keep it',
                });

                if (!confirmCancel.isConfirmed) {
                    select.value = button.getAttribute('data-original-status');
                    return;
                }
            }

            try {
                // Send an AJAX request
                const response = await $.ajax({
                    url: `/admin/update-order-status/${orderId}`,
                    type: 'PATCH',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        productId,
                        itemId,
                        color,
                        newStatus
                    })
                });

                if (response.success) {
                    const statusBadge = document.getElementById(`current-status-${itemId}`);
                    if (statusBadge) {
                        statusBadge.textContent = newStatus; // Update badge with new status
                        statusBadge.className = `badge bg-${getStatusClass(newStatus)}`;
                    }
                    showNotification('Order status updated successfully', 'success');
                } else {
                    showNotification(response.message || 'Failed to update order status', 'error');
                }
            } catch (error) {
                console.error('Error updating order status:', error);
                showNotification('Failed to update order status', 'error');
            }
        });
    });
});

function getStatusClass(status) {
    switch (status) {
        case 'Shipped':
            return 'info';
        case 'Delivered':
            return 'success';
        case 'Cancelled':
            return 'danger';
        case 'Processing':
        default:
            return 'primary';
    }
}

function showNotification(message, type) {
    Swal.fire({
        icon: type,
        title: message,
        showConfirmButton: false,
        timer: 2000,
    });
}
       
    </script>

<%include("../partials/mainfooter")%>
</body>
</html>
