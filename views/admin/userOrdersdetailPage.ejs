<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Details</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <%include("../partials/user/profileHead")%>
    <style>
        .badge-processing {
            background-color: #ffeeba;
            color: #856404;
            padding: 0.5em 1em;
        }
        .back-button {
            background-color: #6c757d;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 4px;
            text-decoration: none;
        }
        .back-button:hover {
            background-color: #5a6268;
            color: white;
        }
        .order-details-card {
            background-color: #f8f9fa;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
        }
        .product-image {
            max-width: 100px;
            height: auto;
        }
        .detail-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
        }
        .total-row {
            font-weight: bold;
            border-top: 2px solid #dee2e6;
            padding-top: 10px;
            margin-top: 10px;
        }
        .product-card {
            background-color: #f8f9fa;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 20px;
        }
        .product-card-header {
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="container py-4">
        <!-- Back Button -->
        <div class="mb-4">
            <a href="/userOrders" class="back-button">← Back to Orders</a>
        </div>

        <!-- Order ID and Status -->
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1 class="h3">Order Id #<%= order.orderId %></h1>
            <span class="badge badge-processing"><%= order.orderStatus %></span>
        </div>

        <!-- Order Details -->
        <div class="order-details-card mb-4">
            <h2 class="h4 mb-3">Order Details</h2>
            <div class="row">
                <div class="col-md-4">
                    <p class="mb-1"><strong>Order Date:</strong></p>
                    <p><%= new Date(order.createdAt).toLocaleDateString() %></p>
                </div>
                <div class="col-md-4">
                    <p class="mb-1"><strong>Shipping Address:</strong></p>
                    <p><%= order.shippingAddress %></p>
                </div>
                <div class="col-md-4">
                    <p class="mb-1"><strong>Payment Method:</strong></p>
                    <p><%= order.paymentMethod %></p>
                </div>
            </div>
        </div>

        <!-- Order Items -->
        <div class="card mb-4">
            <div class="card-header">
                <h2 class="h4 mb-0">Order Items</h2>
            </div>
            <div class="card-body">
                <% let totalOrderPrice = 0; %> <!-- Initialize total price variable -->
                <% order.items.forEach(item => { %>
                    <div class="product-card">
                        <div class="d-flex align-items-center">
                            <img src="/uploads/re-image/<%= item.Image[0] %>" alt="<%= item.name %>" class="product-image">
                            <div class="ms-3">
                                <h5><%= item.name %></h5>
                                <p class="text-muted">Color: <%= item.color %></p>
                                <p>Quantity: <%= item.quantity %></p>
                                <p class="mb-0">Price: ₹<%= item.totalPrice.toFixed(2) %></p>
                            </div>
                        </div>
                        <div class="mt-3">
                            <label for="status-<%= item._id %>"><strong>Status:</strong></label>
                            <select class="form-select form-select-sm" id="status-<%= item._id %>" data-item-id="<%= item._id %>">
                                <option value="Processing" <%= item.itemStatus === 'Processing' ? 'selected' : '' %>>Processing</option>
                                <option value="Shipped" <%= item.itemStatus === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                                <option value="Delivered" <%= item.itemStatus === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                                <option value="Cancelled" <%= item.itemStatus === 'Cancelled' ? 'selected' : '' %>>Cancelled</option>
                            </select>
                            <button class="btn btn-sm btn-primary mt-2 update-status"
                             data-item-id="<%= item._id %>"
                             data-product-id="<%= item.productId %>"
                             data-color="<%= item.color%>"
                             data-quantity="<%= item.qunatity %>"
                             >Update Status</button>
                        </div>
                    </div>
                    <% totalOrderPrice += item.totalPrice; %> <!-- Add the item price to the total -->
                <% }); %>
            </div>
        </div>

        <!-- Order Summary -->
        <div class="card">
            <div class="card-header">
                <h2 class="h4 mb-0">Order Summary</h2>
            </div>
            <div class="card-body">
                <div class="detail-row">
                    <span>Subtotal:</span>
                    <span>₹<%= order.subtotal.toFixed(2) %></span>
                </div>
                <div class="total-row">
                    <span>Total Price:</span>
                    <span>₹<%= totalOrderPrice.toFixed(2) %></span> <!-- Display the total price -->
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
      
      
      document.addEventListener('DOMContentLoaded', () => {
    const updateButtons = document.querySelectorAll('.update-status'); // Select update buttons

    updateButtons.forEach(button => {
        button.addEventListener('click', async () => {
            const row = button.closest('.product-card'); // Find the closest product card
            const select = row.querySelector('select'); // Select the dropdown within the same card
            
            const orderId = select.getAttribute('data-order-id'); // Order ID
            const productId = select.getAttribute('data-product-id'); // Product ID
            const color = select.getAttribute('data-color'); // Product color
            const newStatus = select.value; // Selected status

            console.log('Order ID:', orderId);
            console.log('Product ID:', productId);
            console.log('Color:', color);
            console.log('New Status:', newStatus);

            // If the new status is "Cancelled," show a confirmation dialog
            if (newStatus === 'Cancelled') {
                const confirmCancel = confirm(
                    'Are you sure you want to cancel this order? This action cannot be undone.'
                );
                if (!confirmCancel) {
                    select.value = select.getAttribute('data-original-status'); // Revert to the original status
                    return;
                }
            }

            try {
                // Send an AJAX request
                const response = await $.ajax({
                    url: `/admin/update-order-status/${orderId}`,
                    type: 'PATCH',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        productId,
                        color,
                        newStatus
                    })
                });

                if (response.success) {
                    // Update UI for success
                    const statusCell = row.querySelector('.order-status');
                    statusCell.textContent = newStatus;

                    // Highlight the row
                    row.classList.add('table-success');
                    setTimeout(() => row.classList.remove('table-success'), 2000);

                    showNotification('Order status updated successfully', 'success');
                } else {
                    showNotification(response.message || 'Failed to update order status', 'error');
                    select.value = select.getAttribute('data-original-status'); // Revert status
                }
            } catch (error) {
                console.error('Error updating order status:', error);
                showNotification('Failed to update order status', 'error');

                // Revert the select value on error
                select.value = select.getAttribute('data-original-status');
            }
        });
    });

    // View Order Details
    const viewDetailButtons = document.querySelectorAll('.view-details');
    viewDetailButtons.forEach(button => {
        button.addEventListener('click', () => {
            const orderId = button.getAttribute('data-order-id');
            window.location.href = `/admin/orderDetails/${orderId}`;
        });
    });
});

// Notification Utility
function showNotification(message, type) {
    const notification = document.createElement('div');
    notification.className = `alert alert-${type === 'success' ? 'success' : 'danger'} alert-dismissible fade show`;
    notification.innerHTML = `
        <strong>${type === 'success' ? 'Success!' : 'Error!'}</strong> ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    `;
    document.body.appendChild(notification);

    // Remove the notification after 5 seconds
    setTimeout(() => {
        notification.remove();
    }, 5000);
}

       
    </script>

<%include("../partials/mainfooter")%>
</body>
</html>
