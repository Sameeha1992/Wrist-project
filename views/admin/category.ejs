

<!DOCTYPE html>
<html lang="en">
<head>

<%-include("../partials/admin/header")%>

    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Category Management</title>
    <!--  SweetAlert -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>

<div class="main-content">
    <div class="content-header">
        <h2 class="page-title">Category Management</h2>
    </div>

  

    <div class="card">
        <div class="card-body">
            <div class="row">
                <div class="col-md-3">
                    <form method="post" action="/admin/addCategory" onsubmit="return handleFormSubmit(event)">
                        <div class="mb-4">
                            <label for="category_name" class="form-label">Name</label>
                            <input type="text" name="name" placeholder="Type here" class="form-control" id="category_name" required/>
                            <div id="name-error" class="error-message"></div>
                        </div>
                        <div class="mb-4">
                            <label for="category_description" class="form-label">Description</label>
                            <textarea placeholder="Type here" name="description" class="form-control" id="descriptionId" required></textarea>
                            <div id="description-error" class="error-message"></div>
                        </div>
                        <div class="d-grid">
                            <button class="btn btn-primary" type="submit">Create category</button>
                        </div>
                    </form>
                </div>
                <div class="col-md-9">
                    
                            <div class="table-responsive">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th>Name</th>
                                            <th>Description</th>
                                            <th>Offer</th>
                                            <th>Status</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% cat.reverse().forEach((category, index) => { %>
                                        <tr>
                                            <td><%= category.name %></td>
                                            <td><%= category.description %></td>
                                            <td>
                                                <div class="offer-container">
                                                    <span class="offer-text">
                                                        <%= category.categoryOffer ? category.categoryOffer : '0%' %>
                                                    </span>
                                                    <% if(category.categoryOffer === 0) { %>
                                                        <button class="btn btn-secondary btn-sm" onclick="addOffer('<%=category._id%>')">
                                                            Add Offer
                                                        </button>
                                                    <% } else { %>
                                                        <button class="btn btn-info btn-sm" onclick="removeOffer('<%=category._id%>')">
                                                            Remove
                                                        </button>
                                                    <% } %>
                                                </div>
                                            </td>
                                            <td>
                                                <span class="badge">
                                                    <%= category.isListed ? 'Listed' : 'Unlisted' %>
                                                </span>
                                            </td>
                                            <td>
                                                <div class="action-buttons">
                                                    <% if(category.isListed) { %>
                                                        <button class="btn btn-danger btn-sm">
                                                            <a href="/admin/listCategory?id=<%= category._id%>">Unlist</a>
                                                        </button>
                                                    <% } else { %>
                                                        <button class="btn btn-success btn-sm">
                                                            <a href="/admin/unlistCategory?id=<%=category._id%>">List</a>
                                                        </button>
                                                    <% } %>
                                                    <button class="btn btn-info btn-sm">
                                                        <a href="/admin/editCategory?id=<%=category._id%>">Edit</a>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                               <% }) %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="pagination-container">
        <div class="pagination">
            <% if (currentPage > 1) { %>
                <a href="?page=<%= currentPage - 1 %>">&laquo; Previous</a>
            <% } %>
    
            <% for (let i = 1; i <= totalPages; i++) { %>
                <% if (i === currentPage) { %>
                    <span class="current-page"><%= i %></span>
                <% } else { %>
                    <a href="?page=<%= i %>"><%= i %></a>
                <% } %>
            <% } %>
    
            <% if (currentPage < totalPages) { %>
                <a href="?page=<%= currentPage + 1 %>">Next &raquo;</a>
            <% } %>
        </div>
    </div>
</div>

<style>
    /* Main Layout */
    .main-content {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem 1.5rem;
    }

    .content-header {
        margin-bottom: 2rem;
    }


     
  /* Pagination styles */
  .pagination-container {
    text-align: center;
  }
  
  .pagination {
    display: inline-block;
  }
  
  .pagination a,
  .pagination .current-page {
    display: inline-block;
    padding: 5px 10px;
    margin: 0 2px;
    border: 1px solid #ddd;
    text-decoration: none;
    color: #333;
  }
  
  .pagination a:hover {
    background-color: #f5f5f5;
  }

    .page-title {
        font-size: 1.875rem;
        font-weight: 600;
        color: #334155;
        margin-bottom: 1.5rem;
        padding-bottom: 0.75rem;
        border-bottom: 2px solid #e2e8f0;
    }

    /* Table Styles */
    .table-responsive {
        background: white;
        border-radius: 0.5rem;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        overflow-x: auto;
    }

    .table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
    }

    .table th,
    .table td {
        padding: 1rem;
        text-align: left;
        border-bottom: 1px solid #e2e8f0;
        vertical-align: middle;
    }

    .table th {
        background: #f8fafc;
        color: #475569;
        font-weight: 600;
        font-size: 0.875rem;
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }

    .table tbody tr:hover {
        background-color: #f8fafc;
    }

    .table td:last-child {
        width: 200px;
    }

    /* Action Buttons Layout */
    .action-buttons {
        display: flex;
        gap: 0.5rem;
        justify-content: flex-start;
        align-items: center;
    }

    /* Button Base Styles */
    .btn {
        position: relative;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 0.5rem 1rem;
        border-radius: 0.375rem;
        font-weight: 500;
        font-size: 0.875rem;
        line-height: 1.25rem;
        transition: all 0.2s ease;
        border: none;
        cursor: pointer;
        text-decoration: none;
        white-space: nowrap;
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
    }

    .btn-sm {
        padding: 0.375rem 0.75rem;
        font-size: 0.75rem;
    }

    /* Remove anchor underlines */
    .btn a {
        color: inherit;
        text-decoration: none;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 100%;
        height: 100%;
    }

    /* Button Variants */
    .btn-primary {
        background-color: #475569;
        color: white;
    }

    .btn-primary:hover {
        background-color: #334155;
    }

    .btn-info {
        background-color: #0ea5e9;
        color: white;
    }

    .btn-info:hover {
        background-color: #0284c7;
    }

    .btn-danger {
        background-color: #ef4444;
        color: white;
    }

    .btn-danger:hover {
        background-color: #dc2626;
    }

    .btn-success {
        background-color: #22c55e;
        color: white;
    }

    .btn-success:hover {
        background-color: #16a34a;
    }

    .btn-secondary {
        background-color: #64748b;
        color: white;
    }

    .btn-secondary:hover {
        background-color: #475569;
    }

    /* Status Badge */
    .badge {
        display: inline-flex;
        align-items: center;
        padding: 0.25rem 0.75rem;
        border-radius: 9999px;
        font-size: 0.75rem;
        font-weight: 500;
        background-color: #e2e8f0;
        color: #475569;
    }

    /* Offer Section */
    .offer-container {
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .offer-text {
        font-weight: 500;
        color: #475569;
        min-width: 3rem;
    }

    /* Form Controls */
    .form-control {
        width: 100%;
        padding: 0.625rem;
        border: 1px solid #e2e8f0;
        border-radius: 0.375rem;
        transition: border-color 0.15s ease;
    }

    .form-control:focus {
        outline: none;
        border-color: #64748b;
        box-shadow: 0 0 0 1px #64748b;
    }

    /* Error Messages */
    .error-message {
        color: #ef4444;
        font-size: 0.875rem;
        margin-top: 0.25rem;
    }

    /* Responsive Design */
    @media (max-width: 768px) {
        .table-responsive {
            margin: 1rem -1rem;
            border-radius: 0;
        }

        .action-buttons {
            flex-direction: column;
            gap: 0.25rem;
        }

        .btn {
            width: 100%;
        }

        .offer-container {
            flex-direction: column;
            align-items: flex-start;
            gap: 0.5rem;
        }

        .table td:last-child {
            width: auto;
        }
    }
</style>

<script>
    function handleFormSubmit(event) {
        event.preventDefault();
        if (!validateForm()) {
            return;
        }
        const name = document.getElementsByName("name")[0].value;
        const description = document.getElementById("descriptionId").value;
        
        fetch("/admin/addCategory", {
            method: "POST",
            headers: {
                'Content-Type': "application/json"
            },
            body: JSON.stringify({name, description})
        })
        .then(response => {
            if (!response.ok) {
                return response.json().then(err => {
                    throw new Error(err.error);
                });
            }
            return response.json();
        })
        .then(data => {
            location.reload();
        })
        .catch(error => {
            if (error.message === "Category already exists") {
                Swal.fire({
                   icon: "error",
                   title: "Oops",
                   text: "Category already exists" 
                });
            } else {
                Swal.fire({
                    icon: "error",
                    title: "Oops",
                    text: "An error occurred while adding the category",
                });
            }
        });
    }

    function validateForm() {
        clearErrorMessages();
        const name = document.getElementById("category_name").value.trim();
        const description = document.getElementById("descriptionId").value.trim();
        let isValid = true;

        if (name === "") {
            displayErrorMessage("name-error", "Please enter a name");
            isValid = false;
        } else if (!/^[a-zA-Z\s]+$/.test(name)) {
           displayErrorMessage("name-error", "Category name should contain only alphabetic characters");
           isValid = false;
        }
        if (description === "") {
            displayErrorMessage("description-error", "Please enter a description");
            isValid = false;
        }
        return isValid;
    }

    function displayErrorMessage(elementId, message) {
        var errorElement = document.getElementById(elementId);
        errorElement.innerText = message;
        errorElement.style.display = "block";
    }

    function clearErrorMessages() {
        const errorElements = document.getElementsByClassName("error-message");
        Array.from(errorElements).forEach((element) => {
            element.innerText = "";
            element.style.display = "none";
        });
    }


  async function addOffer(categoryId){

    const {value:amount} = await Swal.fire({
        title:"Offer in percentage",
        input:"number",
        inputLabel:"Percentage",
        inputPlaceholder: "%",
    });

    if(amount != undefined){
        if(amount<=0|| amount >=100){
            Swal.fire({
                icon:"error",
                title:"Invalid Offer",
                
            })
            return;
        }
    }

    if(amount){
        try {
            const response = await fetch("/admin/addCategoryOffer", {
                method:"POST",
                headers:{
                    'content-type' :'application/json',
                },
                body:JSON.stringify({
                    percentage:amount,
                    categoryId:categoryId,
                }),
            });

            const data = await response.json();

            console.log("Response from the server",data)
            if(response.ok && data.success===true){
                Swal.fire(
                    "Offer added",
                    "The offer has been added",
                    "success"
                ).then(()=>{
                    location.reload();
                })
            }else {
                Swal.fire("Failed", data.message || "Adding offer failed","error");
            }
            
        } catch (error) {
            Swal.fire(
                "Error",
                "An error occured while adding the offer",
                "error"
            );
            console.log("Error adding offer",error)
            
        }
    }
  }



  async function removeOffer(categoryId){
    try {
        const response= await fetch("/admin/removeCategoryOffer" , {
            method:"POST",
            headers:{
                "content-type" : "application/json"
            },
            body: JSON.stringify({
                categoryId:categoryId,
            })
        })
        const data = await response.json();
        if(response.ok && data.success ===true){
            Swal.fire(
                "Offer removed",
                "The offer has been removed",
                "success"
            ) .then(()=>{
                location.reload();
            });
        } else{
            Swal.fire("Failed",data.message || "Removing offer failed" ,"error")
        }
        
    } catch (error) {
        Swal.fire(
            "Error",
            "An error occured when removing the offer",
            "error"
        );
        console.error("Error removing offer",error)
    }
  }


  


</script>

<%-include("../partials/admin/footer")%>


































