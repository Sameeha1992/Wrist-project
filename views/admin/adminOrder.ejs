<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Management</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
   
    <%- include("../partials/admin/header") %>
    <style>
        body {
            background-color: #f8f9fa;
            color: #333;
            font-family: Arial, sans-serif;
        }
        .main-content {
            padding: 20px;
        }
        .table {
            color: #333;
            background-color: #ffffff;
        }
        .table thead th {
            border-color: #dee2e6;
            background-color: #f8f9fa;
            color: #495057;
        }
        .table tbody td {
            border-color: #dee2e6;
        }
        .table-striped tbody tr:nth-of-type(odd) {
            background-color: rgba(0, 0, 0, 0.05);
        }
        .form-control {
            background-color: #ffffff;
            color: #333;
            border-color: #ced4da;
        }
        .form-control:focus {
            background-color: #ffffff;
            color: #333;
            border-color: #80bdff;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
        }
        .form-control::placeholder {
            color: #6c757d;
        }
        .btn-secondary {
            background-color: #6c757d;
            border-color: #6c757d;
        }
        .btn-secondary:hover {
            background-color: #5a6268;
            border-color: #545b62;
        }
        .form-select {
            background-color: #ffffff;
            color: #333;
            border-color: #ced4da;
        }
        .form-select:focus {
            background-color: #ffffff;
            color: #333;
            border-color: #80bdff;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
        }
        /* Updated pagination styles */
        .pagination {
            display: flex;
            justify-content: center;
            margin-top: 20px;
        }
        .pagination a {
            color: #57595b;
            padding: 8px 16px;
            text-decoration: none;
            transition: background-color .3s;
            border: 1px solid #ddd;
            margin: 0 4px;
        }
        .pagination a.active {
            background-color: #3e4145;
            color: white;
            border: 1px solid #007bff;
        }
        .pagination a:hover:not(.active) {
            background-color: #ddd;
        }

        .notification {
    position: fixed;
    bottom: 10px;
    right: 10px;
    padding: 10px 20px;
    color: white;
    border-radius: 5px;
    z-index: 1000;
    font-family: Arial, sans-serif;
}

.notification.success {
    background-color: green;
}

.notification.error {
    background-color: red;
}

    </style>
</head>
<body>
    <div class="container-fluid">
        <main role="main" class="main-content">
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3">
                <h1 class="h2">Order Management</h1>
                <div class="btn-toolbar mb-2 mb-md-0">
                    <div class="input-group">
                        <input type="text" class="form-control" placeholder="Search orders..." aria-label="Search orders">
                        <button class="btn btn-secondary" type="button">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                                <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z"/>
                            </svg>
                        </button>
                    </div>
                </div>
            </div>

            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Order ID</th>
                            <th>Customer</th>
                            <th>Date</th>
                            <th>Total</th>
                            <th>Status</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% orders.forEach(order =>{ %>
                        <tr>
                            <td><%= order._id %></td>
                            <td><%= order.userId?.name || 'Deleted User'%></td>
            
                            <td><%= new Date(order.createdAt).toLocaleDateString() %></td>
                            <td><%= order.totalAmount %></td>
                            <td class="order-status"><%= order.orderStatus %></td>
                            <td>
                                <select class="form-select form-select-sm status-change" 
                                data-order-id="<%= order._id %>"
                                data-product-id="<%= order.orderItem[0].productId %>"
                                data-color="<%= order.orderItem[0].color %>">
                                data-original-status ="<%= order.orderStatus%>"
                                <option value="Processing" <%= order.orderStatus === 'Processing' ? 'selected' : '' %>>Processing</option>
                                <option value="Dispatched" <%= order.orderStatus === 'Dispatched' ? 'selected' : '' %>>Dispatched</option>
                                <option value="Shipped" <%= order.orderStatus === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                                <option value="Delivered" <%= order.orderStatus === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                                <option value="Cancelled" <%= order.orderStatus === 'Cancelled' ? 'selected' : '' %>>Cancelled</option>
                            </select>

                            <button class="btn btn-sm btn-primary update-status"
                            data-order-id="<%= order._id %>" 
                            data-product-id="<%= order.orderItem[0].productId %>"
                            data-color="<%= order.orderItem[0].color %>">
                            Update
                            </button>
                            </td>
                            <td>
                                <div class="btn-group" role="group">
                                    <button class="btn btn-sm btn-secondary view-details" 
                                        data-order-id="<%= order._id %>">
                                        View Details
                                    </button>

                                   
                        </tr>
                        <% });%>
                    </tbody>
                </table>

                <div class="pagination">
                    <% for(let i = 1; i <= totalPages; i++) { %>
                        <a href="?page=<%= i %>" class="<%= currentPage === i ? 'active' : '' %>"><%= i %></a>
                    <% } %>
                </div>

            </div>
        </main>
    </div>


    <div class="modal fade" id="orderDetailsModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Order Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body" id="orderDetailsContent">
                    <!-- Order ID and Status -->
                    <p><strong>Order ID:</strong> <span id="order-id"></span></p>
                    <p><strong>Status:</strong> <span id="order-status"></span></p>
    
                    <!-- Order Metadata -->
                    <p><strong>Created At:</strong> <span id="order-created-at"></span></p>
                    <p><strong>Shipping Address:</strong> <span id="order-shipping-address"></span></p>
                    <p><strong>Payment Method:</strong> <span id="order-payment-method"></span></p>
                    <p><strong>Subtotal:</strong> $<span id="order-subtotal"></span></p>
    
                    <!-- Items Section -->
                    <h5>Items:</h5>
                    <ul id="order-items-list" class="list-unstyled">
                        <!-- Items will be dynamically injected here -->
                    </ul>
                </div>
            </div>
        </div>
    </div>
    

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
   
    <script>
       document.addEventListener('DOMContentLoaded', () => {
    const updateButtons = document.querySelectorAll('.update-status'); // Corrected variable name for clarity

    updateButtons.forEach(button => {
        button.addEventListener('click', async () => { // Attach event listener to each button
            const row = button.closest('tr'); // Get the corresponding table row
            const select = row.querySelector('.status-change'); // Get the select element inside the same row
            
            const orderId = select.getAttribute('data-order-id'); // Retrieve order ID
            const productId = select.getAttribute('data-product-id'); // Retrieve product ID
            const color = select.getAttribute('data-color'); // Retrieve product color
            const newStatus = select.value; // Get the selected value (new status)

            console.log('Order ID:', orderId);
            console.log('Product ID:', productId);
            console.log('Color:', color);
            console.log('New Status:', newStatus);

            try {
                // Send the PATCH request
                const response = await fetch(`/admin/update-order-status/${orderId}`, {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                   body:JSON.stringify({ newStatus})
                });

                const result = await response.json();

                if (result.success) {
                    const statusCell = row.querySelector('.order-status');
                    statusCell.textContent = newStatus; // Update the status in the UI

                    // Highlight the row for success
                    row.classList.add('table-success');
                    setTimeout(() => {
                        row.classList.remove('table-success');
                    }, 2000);

                    showNotification('Order status updated successfully', 'success');
                } else {
                    showNotification(result.message, 'error');
                    select.value = select.getAttribute('data-original-status'); // Revert the select value
                }
            } catch (error) {
                console.error('Error updating order status:', error);
                showNotification('Failed to update order status', 'error');

                // Revert the select value on error
                select.value = select.getAttribute('data-original-status');
            }
        });
    });
});


function showNotification(message, type) {
    const notification = document.createElement('div');
    notification.className = `alert alert-${type === 'success' ? 'success' : 'danger'} alert-dismissible fade show`;
    notification.innerHTML = `
        <strong>${type === 'success' ? 'Success!' : 'Error!'}</strong> ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    `;
    document.body.appendChild(notification);

    // Remove the notification after 5 seconds
    setTimeout(() => {
        notification.remove();
    }, 5000);
}





document.addEventListener("DOMContentLoaded", () => {
    const modalBody = document.getElementById("orderDetailsContent");

    // Attach event listener to dynamically load order details
    document.querySelectorAll(".view-details-btn").forEach((button) => {
        button.addEventListener("click", async () => {
            const orderId = button.getAttribute("data-order-id");

            try {
                const response = await fetch(`/orders/details/${orderId}`);
                const data = await response.json();

                if (data.success) {
                    const order = data.order;

                    // Update modal placeholders with data
                    document.getElementById("order-id").textContent = order._id;
                    document.getElementById("order-status").textContent = order.orderStatus;
                    document.getElementById("order-created-at").textContent = new Date(order.createdAt).toLocaleString();
                    document.getElementById("order-shipping-address").textContent = order.shippingAddress;
                    document.getElementById("order-payment-method").textContent = order.paymentMethod;
                    document.getElementById("order-subtotal").textContent = order.subtotal.toFixed(2);

                    // Populate the items list
                    const itemsList = document.getElementById("order-items-list");
                    itemsList.innerHTML = ""; // Clear any previous content

                    order.items.forEach((item) => {
                        const listItem = document.createElement("li");
                        listItem.innerHTML = `
                            <div class="d-flex align-items-center">
                                <img src="${item.image}" alt="${item.name}" style="width:50px;height:50px;object-fit:cover;margin-right:10px;">
                                <span>${item.name} - $${item.price.toFixed(2)} x ${item.quantity} = $${item.totalPrice.toFixed(2)}</span>
                            </div>
                        `;
                        itemsList.appendChild(listItem);
                    });
                } else {
                    modalBody.innerHTML = `<p>Error loading order details: ${data.message}</p>`;
                }
            } catch (error) {
                console.error("Error fetching order details:", error);
                modalBody.innerHTML = `<p>Something went wrong while fetching order details.</p>`;
            }
        });
    });
});


    </script>

    
    <%- include("../partials/admin/footer") %>
</body>
</html>